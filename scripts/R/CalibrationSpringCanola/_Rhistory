c <- c(0,1,2)
install.packages("C:/Users/brcarlson/Downloads/ncdf4_1.12.zip", repos = NULL, type = "win.binary")
install.packages("ncdf4")
library(ncdf4)
path <- "C:\Files\Inbox\pr_2016.nc"
nc <- nc_open(path)
nc
library(ncdf4)
path <- "C:\Files\Inbox\pr_2016.nc"
path <- "C:\\Files\\Inbox\\pr_2016.nc"
nc <- nc_open(path)
nc
print(nc)
precip <- ncvar_get(nc, "precipitation_amount")
precip <- ncvar_get(nc, "precipitation_amount")
print(precip)
precip[,2,]
nc
precip_test <- precip[0,1,1]
precip_test
precip_test <- precip[,1,1]
precip_test
longitude <- ncvar_get(nc, "lon")
longitude
summary(longitude)
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_7_season_all.dat")
library(ggplot2)
library(plyr)
setwd("C:\\Drive\\Files\\Projects\\FlexCropping\\Methods\\R\\CalibrationSpringCanola")
ggplotRegression <- function(path.obs, path.sim) {
require(ggplot2)
require(plyr)
# Read data with observed yield
df.obs <- read.table(path.obs, sep="\t", header=TRUE)
# Read data with simulated yield, only read required columns
columnClasses = c("Date", rep("NULL", 10), "numeric", rep("NULL", 70), rep("character", 3), "NULL")
df.sim <- read.table(path.sim, colClasses = columnClasses, sep="\t", header=TRUE)
# Convert units (from/to?) and extract planting year from date
df.sim$yield <- df.sim$yield * 10000
df.sim$Year <- as.numeric(substring(df.sim$planting_date,0,4))
# Merge sim and obs dataframes by location and  year
df <- merge(df.obs, df.sim, by=c("location", "Year"))
# Rename yield columns for clarity
df <- rename(df, c("Yield"="yield.obs", "yield"="yield.sim"))
# Graph sim vs obs
fit <- lm(yield.sim ~ yield.obs, data = df)
print(summary(fit))
ggplot(df, aes(x=df$yield.obs, y=df$yield.sim)) +
geom_point(shape=1) +
geom_abline(slope=1) +
#geom_smooth(method='lm', se=TRUE) +
stat_smooth(method="lm", formula = y ~ x, size=1) +
coord_cartesian(xlim=c(0,5000), ylim=c(0,5000)) +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_7_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_8_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_8_season_all.dat")
library(ggplot2)
library(plyr)
setwd("C:\\Drive\\Files\\Projects\\FlexCropping\\Methods\\R\\CalibrationSpringCanola")
ggplotRegression <- function(path.obs, path.sim) {
require(ggplot2)
require(plyr)
# Read data with observed yield
df.obs <- read.table(path.obs, sep="\t", header=TRUE)
# Read data with simulated yield, only read required columns
columnClasses = c("Date", rep("NULL", 10), "numeric", rep("NULL", 70), rep("character", 3), "NULL")
df.sim <- read.table(path.sim, colClasses = columnClasses, sep="\t", header=TRUE)
# Convert units (from/to?) and extract planting year from date
df.sim$yield <- df.sim$yield * 10000
df.sim$Year <- as.numeric(substring(df.sim$planting_date,0,4))
# Merge sim and obs dataframes by location and  year
df <- merge(df.obs, df.sim, by=c("location", "Year"))
# Rename yield columns for clarity
df <- rename(df, c("Yield"="yield.obs", "yield"="yield.sim"))
# Graph sim vs obs
fit <- lm(yield.sim ~ yield.obs, data = df)
print(summary(fit))
ggplot(df, aes(x=df$yield.obs, y=df$yield.sim)) +
geom_point(shape=1) +
geom_abline(slope=1) +
#geom_smooth(method='lm', se=TRUE) +
stat_smooth(method="lm", formula = y ~ x, size=1) +
coord_cartesian(xlim=c(0,5000), ylim=c(0,5000)) +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
# obs vs 17-04-21
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-04-21_season_all.dat")
# obs vs 17-05-04
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-04_season_all.dat")
# 17-05-05_1
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_1_season_all.dat")
# 17-05-05_2
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_2_season_all.dat")
# 17-05-05_3
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_3_season_all.dat")
# 17-05-05_4
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_4_season_all.dat")
# 17-05-05_5
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_5_season_all.dat")
# 17-05-05_6
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_6_season_all.dat")
# 17-05-08_7
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_7_season_all.dat")
# 17-05-08_8
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_8_season_all.dat")
## === New sim vs Obs ===
#df.obs <- read.table("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", sep="\t", header=TRUE)
#df.sim <- read.table("Input\\17-05-04_season_all.dat", sep="\t", header=TRUE)
#df.sim$Year <- as.numeric(substring(df.sim$planting_date,0,4))
#df <- merge(df.obs, df.sim, by=c("location", "Year"))
#
#ggplot(df, aes(x=df$yield, y=df$Yield)) +
#  geom_point(shape=1) +
#  geom_abline(slope=1) +
#  geom_smooth(method='lm', se=TRUE)
#
## === Old Sim vs Obs ===
#df.obs <- read.table("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", sep="\t", header=TRUE)
#columnClasses = c("Date", rep("NULL", 10), "numeric", rep("NULL", 70), rep("character", 3), "NULL")
#df.sim.old <- read.table("Input\\17-04-21_season_all.dat", colClasses = columnClasses, sep="\t", header=TRUE)
#df.sim.old$yield <- df.sim.old$yield * 10000
#df.sim.old$Year <- as.numeric(substring(df.sim.old$planting_date,0,4))
#df.old <- merge(df.obs, df.sim.old, by=c("location", "Year"))
#df.old <- rename(df.old, c("Yield"="yield.obs", "yield"="yield.sim"))
#fit.old <- lm(yield.obs ~ yield.sim, data = df.old)
#ggplot(df.old, aes(x=df.old$yield.obs, y=df.old$yield.sim)) +
#  geom_point(shape=1) +
#  geom_abline(slope=1) +
#  geom_smooth(method='lm', se=TRUE) +
#  coord_cartesian(xlim=c(0,5000), ylim=c(0,5000)) +
#  labs(title = paste("Adj R2 = ",signif(summary(fit.old)$adj.r.squared, 5),
#                     "Intercept =",signif(fit.old$coef[[1]],5 ),
#                     " Slope =",signif(fit.old$coef[[2]], 5),
#                     " P =",signif(summary(fit.old)$coef[2,4], 5)))
#
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_9_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_10_season_all.dat")
plot(cars)
library(ggplot2)
library(plyr)
setwd("C:\\Drive\\Files\\Projects\\FlexCropping\\Methods\\R\\CalibrationSpringCanola")
ggplotRegression <- function(path.obs, path.sim) {
require(ggplot2)
require(plyr)
# Read data with observed yield
df.obs <- read.table(path.obs, sep="\t", header=TRUE)
# Read data with simulated yield, only read required columns
columnClasses = c("Date", rep("NULL", 10), "numeric", rep("NULL", 70), rep("character", 3), "NULL")
df.sim <- read.table(path.sim, colClasses = columnClasses, sep="\t", header=TRUE)
# Convert units (from/to?) and extract planting year from date
df.sim$yield <- df.sim$yield * 10000
df.sim$Year <- as.numeric(substring(df.sim$planting_date,0,4))
# Merge sim and obs dataframes by location and  year
df <- merge(df.obs, df.sim, by=c("location", "Year"))
# Rename yield columns for clarity
df <- rename(df, c("Yield"="yield.obs", "yield"="yield.sim"))
# Graph sim vs obs
fit <- lm(yield.sim ~ yield.obs, data = df)
print(summary(fit))
ggplot(df, aes(x=df$yield.obs, y=df$yield.sim)) +
geom_point(shape=1) +
geom_abline(slope=1) +
#geom_smooth(method='lm', se=TRUE) +
stat_smooth(method="lm", formula = y ~ x, size=1) +
coord_cartesian(xlim=c(0,5000), ylim=c(0,5000)) +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-04-21_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-04_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-04_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_11_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_10_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_12_season_all.dat")
---
title: "CropSyst calibration - spring canola"
output: html_notebook
---
## Set up script
```{r}
library(ggplot2)
library(plyr)
setwd("C:\\Drive\\Files\\Projects\\FlexCropping\\Methods\\R\\CalibrationSpringCanola")
ggplotRegression <- function(path.obs, path.sim) {
require(ggplot2)
require(plyr)
# Read data with observed yield
df.obs <- read.table(path.obs, sep="\t", header=TRUE)
# Read data with simulated yield, only read required columns
columnClasses = c("Date", rep("NULL", 10), "numeric", rep("NULL", 70), rep("character", 3), "NULL")
df.sim <- read.table(path.sim, colClasses = columnClasses, sep="\t", header=TRUE)
# Convert units (from/to?) and extract planting year from date
df.sim$yield <- df.sim$yield * 10000
df.sim$Year <- as.numeric(substring(df.sim$planting_date,0,4))
# Merge sim and obs dataframes by location and  year
df <- merge(df.obs, df.sim, by=c("location", "Year"))
# Rename yield columns for clarity
df <- rename(df, c("Yield"="yield.obs", "yield"="yield.sim"))
# Graph sim vs obs
fit <- lm(yield.sim ~ yield.obs, data = df)
print(summary(fit))
ggplot(df, aes(x=df$yield.obs, y=df$yield.sim)) +
geom_point(shape=1) +
geom_abline(slope=1) +
#geom_smooth(method='lm', se=TRUE) +
stat_smooth(method="lm", formula = y ~ x, size=1) +
coord_cartesian(xlim=c(0,5000), ylim=c(0,5000)) +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
```
## Comparing obs to sim runs on 17-04-21
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-04-21_season_all.dat")
```
## Obs vs 17-05-04
https://github.com/bryanrcarlson/LtarModelingFlexCropping_CropSyst/commit/8b214bae593ace8f291cd766bc34a4fc81ef2091#diff-8fb462d4d9caaeef85ac8a8f5a530157
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-04_season_all.dat")
```
## SC1 Adj LAI params
https://github.com/bryanrcarlson/LtarModelingFlexCropping_CropSyst/commit/b2d3aab9dabf1c671f75b06ba12dab220c381eb9#diff-8fb462d4d9caaeef85ac8a8f5a530157
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_1_season_all.dat")
```
## SC2 Adj HI
https://github.com/bryanrcarlson/LtarModelingFlexCropping_CropSyst/commit/58e2f90e260282fa531b800b20f1e008939a9f16#diff-8fb462d4d9caaeef85ac8a8f5a530157
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_2_season_all.dat")
```
## SC3 Adj TUE: https://github.com/bryanrcarlson/LtarModelingFlexCropping_CropSyst/commit/e729c39098aacbefd5bba7098fe237761e99a036#diff-8fb462d4d9caaeef85ac8a8f5a530157
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_3_season_all.dat")
```
## SC4 Adj SLA and LAI: https://github.com/bryanrcarlson/LtarModelingFlexCropping_CropSyst/commit/eb40dd9abb93855ef49fa028c964749cf853e468#diff-8fb462d4d9caaeef85ac8a8f5a530157
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_4_season_all.dat")
```
## SC5: Increased TUE and HI stressors: https://github.com/bryanrcarlson/LtarModelingFlexCropping_CropSyst/commit/6333ea5683062ff34af80f17d2d33d958c24debc#diff-8fb462d4d9caaeef85ac8a8f5a530157
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_5_season_all.dat")
```
## SC6: Reduced TUE and HI a bit: https://github.com/bryanrcarlson/LtarModelingFlexCropping_CropSyst/commit/8e4f3555a4157f2e2890dd69ce23f4573232b42d#diff-8fb462d4d9caaeef85ac8a8f5a530157
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_6_season_all.dat")
```
## SC7: Increased stressors: https://github.com/bryanrcarlson/LtarModelingFlexCropping_CropSyst/commit/0ff1c05930f33bb1c8ab569eaf38986d6d44699c#diff-5bf50174d60077ff41a0967d09ac9250
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_7_season_all.dat")
```
* That did nothing!! It's all lies!
## SC8: Second attempt at stressors: https://github.com/bryanrcarlson/LtarModelingFlexCropping_CropSyst/commit/9a7c409eec586544a684040833f825d0a00a809b#diff-5bf50174d60077ff41a0967d09ac9250
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_8_season_all.dat")
```
Tried adjusting params twice, no effect!
## SC9: Increased dd for emergence 90 -> 100
https://github.com/bryanrcarlson/LtarModelingFlexCropping_CropSyst/commit/1b3737b5429bc3b8909d1ab7fe7b0e574ff08a03#diff-5bf50174d60077ff41a0967d09ac9250
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_9_season_all.dat")
```
## SC10: Rolled back emergence DD, and some stressors, decreased translocation factor and HI
https://github.com/bryanrcarlson/LtarModelingFlexCropping_CropSyst/commit/e1775f1b00d69067b8897e5476534fc2e04a5af7#diff-8fb462d4d9caaeef85ac8a8f5a530157
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_10_season_all.dat")
```
## SC11: flowering_sensitivity 0.8 -> 1: https://github.com/bryanrcarlson/LtarModelingFlexCropping_CropSyst/commit/46acd8bb718353ce3fa0aa626627845847086919#diff-5bf50174d60077ff41a0967d09ac9250
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_11_season_all.dat")
```
* No change!
## SC12: Incrased time of flowering
```{r}
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_12_season_all.dat")
```
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_1_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_2_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_3_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_4_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_5_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-05_6_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_7_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_8_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-08_9_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-09_13_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-09_14_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-09_15_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-09_15_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-09_16_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-09_17_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-09_18_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-09_19_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-09_19_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-09_20_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-09_20_season_all.dat")
ggplotRegression("Input\\observed_spring_canola_peas_wheat_planting_dates.txt", "Input\\17-05-09_21_season_all.dat")
